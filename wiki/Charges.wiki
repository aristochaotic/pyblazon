#summary Charges and how to blazon them
=Charges=

Charges, broadly speaking, are the pictures and shapes and whatever that go
on a shield.  On one hand, this is a very broad category and the myriad
pictures that are charges are what give shields their distinctive
character.  On the other hand, from a computing point of view, one charge
is a lot like another, and trying to deal with lots of them is more of a
headache than an enlightening programming challenge.

pyBlazon understands some simple geometric charges, and has various ways to
use pictures from anywhere else on the web as charges too, without changing
the syntax of the blazon (much).  Here are some typical charges:

|| _Roundel_ || _Annulet_ || _Lozenge_ || _Billet_ || _Crescent_ ||
|| http://pyblazon.googlecode.com/svn/wiki/img/or_a_roundel_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_an_annulet_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_a_lozenge_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_a_billet_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_a_crescent_azure.png ||

Charges are blazoned like we saw with [Ordinaries].  The shields above were
blazoned _Or a roundel azure_, and so forth.  The color follows the charge.
And the charge can be colored in more complicated ways, as in the examples
in PartyPer.

Charges are often found in groups of more than one charge (of the same kind):

|| _2 roundels_ || _5 annulets_ || _3 escutcheons_ || _6 billets_ || _7 mascles_ ||
|| http://pyblazon.googlecode.com/svn/wiki/img/or_2_roundels_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_5_annulets_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_3_escutcheons_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_6_billets_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_7_mascles_azure.png ||

As you can see, the charges are arranged in some fashion when there is more
than one of them.  There is a default arrangement, at least for fairly
small numbers of charges (less than ten, say); the examples here show some
of them.  You can also specify other arrangements, either by shape or by
number per row:

|| _Or 3 triangles in pale azure_ || _Or 4 escutcheons in bend azure_ || _Or 5 annulets in cross azure_ || _Or 5 billets in fess azure_ ||
|| http://pyblazon.googlecode.com/svn/wiki/img/or_3_triangles_in_pale_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_4_escutcheons_in_bend_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_5_annulets_in_cross_azure.png || http://pyblazon.googlecode.com/svn/wiki/img/or_5_billets_in_fess_azure.png ||
|| _Or 7 mullets azure 1 4 and 2_ || _Or 6 fleurs-de-lis azure 2 2 and 2_ || _Or 5 roundels azure 1 1 and 3_ || _Or 4 annulets azure 3 and 1_ ||
|| http://pyblazon.googlecode.com/svn/wiki/img/or_7_mullets_azure_1_4_and_2.png || http://pyblazon.googlecode.com/svn/wiki/img/or_6_fleurs-de-lis_azure_2_2_and_2.png || http://pyblazon.googlecode.com/svn/wiki/img/or_5_roundels_azure_1_1_and_3.png || http://pyblazon.googlecode.com/svn/wiki/img/or_4_annulets_azure_3_and_1.png ||

See how it works?

(Just a quick word about _mullets_: by default, a mullet is a five-pointed
star.  But you can also say _mullet of six points_, or _mullet of seven
points_ and so on, for any number from three through twelve.)
